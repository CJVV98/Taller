/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallerfecha1;

import java.sql.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Month;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author johan
 */
public class Panel1 extends javax.swing.JPanel {

    private Persona persona;
    private DefaultTableModel table_model_personas;
    private LocalDate fechan;

    private String tuser;
    private Timestamp ahora12;
    private Date fecha1;
    private int bandera = 0;

    /**
     * Creates new form panel1
     */
    public Panel1() {
        initComponents();
        eliminar2.setVisible(false);
        editar2.setVisible(false);
    }
    
    public void setTableModel(DefaultTableModel table_model_personas){
        this. table_model_personas =  table_model_personas;
    }
    
    public void refreshTableModel()
    {
       ArrayList<Persona> lista_personas=Repositorio.obtenerTodos();
       while(table_model_personas.getRowCount()>0){
            table_model_personas.removeRow(0);
       }
       
       for(Persona p: lista_personas){         
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         
          
            String fecha1 = sdf.format(p.getFechanac());
            String[] data = {Integer.toString(p.getId()), Integer.toString(p.getCedula()), p.getNombre(), p.getApellido(), fecha1, Integer.toString(p.getEdad()), p.getTipo()};
            table_model_personas.addRow(data);
       }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregar1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombre_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        apellido_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ano_txt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        edad_txt = new javax.swing.JTextField();
        tipouser = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cedula_txt = new javax.swing.JTextField();
        mes_txt = new javax.swing.JTextField();
        dia_txt = new javax.swing.JTextField();
        eliminar2 = new javax.swing.JButton();
        editar2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        buscarpersona = new javax.swing.JButton();

        agregar1.setBackground(new java.awt.Color(153, 153, 0));
        agregar1.setForeground(new java.awt.Color(255, 255, 255));
        agregar1.setText("AGREGAR");
        agregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar1ActionPerformed(evt);
            }
        });

        jLabel9.setText("(mes)");

        setBackground(new java.awt.Color(255, 204, 153));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("REGISTRO DE PERSONAS");

        jLabel2.setText("Nombre");

        nombre_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombre_txtKeyTyped(evt);
            }
        });

        jLabel3.setText("Apellido");

        apellido_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                apellido_txtKeyTyped(evt);
            }
        });

        jLabel4.setText("Fecha de nacimiento");

        ano_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ano_txtKeyTyped(evt);
            }
        });

        jLabel5.setText("Edad");

        edad_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                edad_txtKeyTyped(evt);
            }
        });

        tipouser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMINISTRADOR", "RECREADOR" }));
        tipouser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipouserActionPerformed(evt);
            }
        });

        jLabel6.setText("Tipo de usuario");

        agregar.setBackground(new java.awt.Color(153, 153, 0));
        agregar.setForeground(new java.awt.Color(255, 255, 255));
        agregar.setText("AGREGAR");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        jLabel7.setText("N Cedula");

        cedula_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cedula_txtKeyTyped(evt);
            }
        });

        mes_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mes_txtKeyTyped(evt);
            }
        });

        dia_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dia_txtKeyTyped(evt);
            }
        });

        eliminar2.setBackground(new java.awt.Color(153, 0, 0));
        eliminar2.setForeground(new java.awt.Color(255, 255, 255));
        eliminar2.setText("ELIMINAR");
        eliminar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar2ActionPerformed(evt);
            }
        });

        editar2.setBackground(new java.awt.Color(0, 0, 102));
        editar2.setForeground(new java.awt.Color(255, 255, 255));
        editar2.setText("EDITAR");
        editar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Y");

        jLabel10.setText("M");

        jLabel11.setText("D");

        buscarpersona.setBackground(new java.awt.Color(102, 0, 102));
        buscarpersona.setForeground(new java.awt.Color(255, 255, 255));
        buscarpersona.setText("BUSCAR");
        buscarpersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarpersonaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ano_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 11, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mes_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dia_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(18, 18, 18)
                                            .addComponent(tipouser, 0, 219, Short.MAX_VALUE)
                                            .addGap(5, 5, 5))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel3))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(nombre_txt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                                .addComponent(cedula_txt, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(apellido_txt)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(18, 18, 18)
                                            .addComponent(edad_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(agregar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eliminar2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(editar2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buscarpersona)))))
                        .addGap(0, 60, Short.MAX_VALUE)))
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(cedula_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombre_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(apellido_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ano_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mes_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dia_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(edad_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(tipouser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(eliminar2)
                    .addComponent(editar2)
                    .addComponent(buscarpersona)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tipouserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipouserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipouserActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        bandera = 0;
        if (apellido_txt.getText().isEmpty() || nombre_txt.getText().isEmpty() || edad_txt.getText().isEmpty() || ano_txt.getText().isEmpty() || mes_txt.getText().isEmpty() || dia_txt.getText().isEmpty()) {
            bandera = 1;
            JOptionPane.showMessageDialog(this, "Por favor complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            tuser = (String) tipouser.getSelectedItem();
            LocalDateTime ahora = LocalDateTime.now();
            int mesaux = Integer.parseInt(mes_txt.getText());
            try {
                if (Integer.parseInt(mes_txt.getText()) <= 0 || Integer.parseInt(mes_txt.getText()) >= 13) {
                    bandera = 2;
                    JOptionPane.showMessageDialog(this, "Este mes es incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    fechan = LocalDate.of(Integer.parseInt(ano_txt.getText()), Month.of(Integer.parseInt(mes_txt.getText())), Integer.parseInt(dia_txt.getText()));
                    fecha1 = Date.valueOf(fechan);
                    ahora12 = Timestamp.valueOf(ahora);
                    System.out.printf("\nEl dia es es %s y naci en un %s%n", fecha1, ahora12);
                }
            } catch (java.time.DateTimeException sd) {
                bandera = 2;
                JOptionPane.showMessageDialog(this, "Este dia es incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
            }
        if(Repositorio.validarcedula(Integer.parseInt(cedula_txt.getText()))==1){
            bandera=2;
             JOptionPane.showMessageDialog(this, "Esta cedula ya existe", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
        System.out.println(bandera);
        if (bandera != 1 && bandera != 2) {
            persona = Persona.crear(0, Integer.parseInt(cedula_txt.getText()), Integer.parseInt(edad_txt.getText()), nombre_txt.getText(), apellido_txt.getText(), tuser, fecha1, ahora12);
            Repositorio.crear(persona);

            JOptionPane.showMessageDialog(this, "Persona Creada", "Bien", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_agregarActionPerformed

    private void agregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agregar1ActionPerformed

    private void eliminar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar2ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Realmente desea eliminar esta persona", "Eliminar", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.YES_OPTION) {
            Repositorio.eliminar(persona);
            //this.refreshTableModel();
            this.resetPersona();
        }
    }//GEN-LAST:event_eliminar2ActionPerformed

    private void resetPersona() {
        persona.setId(0);
        persona.setCedula(0);
        persona.setNombre("");
        persona.setApellido("");
        persona.setFechanac(fecha1);
        persona.setEdad(0);
        persona.setTipo(tuser);
        persona.setFecharegistro(ahora12);
        popularPersona(persona);
    }

    /*public void setTableModel(DefaultTableModel table_model_personas) {
        this.table_model_personas = table_model_personas;
    }
    
    public void refreshTableModel() {
        ArrayList<Persona> lista_personas = Repositorio.obtenerTodos();
        while (table_model_personas.getRowCount() > 0) {
            table_model_personas.removeRow(0);
        }
        
        for (Persona p : lista_personas) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         
          
            String fecha1 = sdf.format(p.getFechanac());
            String[] data = {Integer.toString(p.getId()), Integer.toString(p.getCedula()), p.getNombre(), p.getApellido(), fecha1, Integer.toString(p.getEdad()), p.getTipo()};
            table_model_personas.addRow(data);
        }
    }*/

    private void cedula_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cedula_txtKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) && (cedula_txt.getText().length() < 10)) {

        } else {
            if (cedula_txt.getText().length() == 10) {
                evt.consume();
                JOptionPane.showMessageDialog(null, "Ya no puede exceder el maximo de digitos", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (Character.isLetter(c) || (c >= 32 && c <= 47) || (c >= 58 && c <= 63)) {
                    evt.consume();
                    JOptionPane.showMessageDialog(null, "Solo se admiten numeros enteros", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

        }
    }//GEN-LAST:event_cedula_txtKeyTyped

    private void nombre_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombre_txtKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            JOptionPane.showMessageDialog(null, "Solo se admiten letras", "Error", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_nombre_txtKeyTyped

    private void apellido_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellido_txtKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            JOptionPane.showMessageDialog(null, "Solo se admiten letras", "Error", JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }
    }//GEN-LAST:event_apellido_txtKeyTyped

    private void ano_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ano_txtKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) && (ano_txt.getText().length() < 4)) {

        } else {
            if (ano_txt.getText().length() == 4) {
                JOptionPane.showMessageDialog(null, "Ya no puede exceder el maximo de digitos", "Error", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            } else {
                if (Character.isLetter(c) || (c >= 32 && c <= 47) || (c >= 58 && c <= 63)) {
                    evt.consume();
                    JOptionPane.showMessageDialog(null, "Solo se admiten numeros enteros", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_ano_txtKeyTyped

    private void mes_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mes_txtKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) && (mes_txt.getText().length() < 2)) {

        } else {
            if (mes_txt.getText().length() == 2) {
                evt.consume();
                JOptionPane.showMessageDialog(null, "Ya no puede exceder el maximo de digitos", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (Character.isLetter(c) || (c >= 32 && c <= 47) || (c >= 58 && c <= 63)) {
                    evt.consume();
                    JOptionPane.showMessageDialog(null, "Solo se admiten numeros enteros", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_mes_txtKeyTyped

    private void dia_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dia_txtKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) && (dia_txt.getText().length() < 2)) {

        } else {
            if (dia_txt.getText().length() == 2) {
                evt.consume();
                JOptionPane.showMessageDialog(null, "Ya no puede exceder el maximo de digitos", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (Character.isLetter(c) || (c >= 32 && c <= 47) || (c >= 58 && c <= 63)) {
                    evt.consume();
                    JOptionPane.showMessageDialog(null, "Solo se admiten numeros enteros", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_dia_txtKeyTyped

    private void edad_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edad_txtKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c) && (edad_txt.getText().length() < 2)) {

        } else {
            if (edad_txt.getText().length() == 2) {
                JOptionPane.showMessageDialog(null, "Ya no puede exceder el maximo de digitos", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (Character.isLetter(c) || (c >= 32 && c <= 47) || (c >= 58 && c <= 63)) {
                    evt.consume();
                    JOptionPane.showMessageDialog(null, "Solo se admiten numeros enteros", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        }
    }//GEN-LAST:event_edad_txtKeyTyped

    private void buscarpersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarpersonaActionPerformed
        String documento = JOptionPane.showInputDialog(this, "Número de documento");
        if (!documento.isEmpty()) {
            persona = Repositorio.buscar(documento);
            if (persona != null) {
                popularPersona(persona);
            }
        }
    }//GEN-LAST:event_buscarpersonaActionPerformed

    private void editar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar2ActionPerformed
        bandera = 0;
        if (apellido_txt.getText().isEmpty() || nombre_txt.getText().isEmpty() || edad_txt.getText().isEmpty() || ano_txt.getText().isEmpty() || mes_txt.getText().isEmpty() || dia_txt.getText().isEmpty()) {
            bandera = 1;
            JOptionPane.showMessageDialog(this, "Por favor complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            tuser = (String) tipouser.getSelectedItem();
            LocalDateTime ahora = LocalDateTime.now();
            int mesaux = Integer.parseInt(mes_txt.getText());
            try {
                if (Integer.parseInt(mes_txt.getText()) <= 0 || Integer.parseInt(mes_txt.getText()) >= 13) {
                    bandera = 2;
                    JOptionPane.showMessageDialog(this, "Este mes es incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    fechan = LocalDate.of(Integer.parseInt(ano_txt.getText()), Month.of(Integer.parseInt(mes_txt.getText())), Integer.parseInt(dia_txt.getText()));
                    fecha1 = Date.valueOf(fechan);
                    ahora12 = Timestamp.valueOf(ahora);
                    System.out.printf("\nEl dia es es %s y naci en un %s%n", fecha1, ahora12);
                }
            } catch (java.time.DateTimeException sd) {
                bandera = 2;
                JOptionPane.showMessageDialog(this, "Este dia es incorrecto", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
        persona.setApellido(apellido_txt.getText());
        persona.setNombre(nombre_txt.getText());
        persona.setCedula(Integer.parseInt(cedula_txt.getText()));
        persona.setFechanac(fecha1);
        persona.setEdad(Integer.parseInt(edad_txt.getText()));
        persona.setTipo(tuser);
        persona.setFecharegistro(ahora12);
        
        System.out.println(bandera);
        if (bandera != 1 && bandera != 2) {
          
            Repositorio.editar(persona);
            JOptionPane.showMessageDialog(this, "Persona actualizada satisfactoriamente", "Bien", JOptionPane.INFORMATION_MESSAGE);

        }
        //Repositorio.editar(persona);

    }//GEN-LAST:event_editar2ActionPerformed

    private void popularPersona(Persona persona) {
        cedula_txt.setText(String.valueOf(persona.getCedula()));
        edad_txt.setText(String.valueOf(persona.getEdad()));
        nombre_txt.setText(persona.getNombre());
        apellido_txt.setText(persona.getApellido());
        tipouser.setSelectedItem(persona.getTipo());
        String[] parts = String.valueOf(persona.getFechanac()).split("-");
        String part1 = parts[0]; // 123
        String part2 = parts[1];
        String part3 = parts[2];
        ano_txt.setText(part1);
        mes_txt.setText(part2);
        dia_txt.setText(part3);

        if (persona.getId() != 0) {
            eliminar2.setVisible(true);
            editar2.setVisible(true);
        } else {
            eliminar2.setVisible(false);
            editar2.setVisible(true);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton agregar1;
    private javax.swing.JTextField ano_txt;
    private javax.swing.JTextField apellido_txt;
    private javax.swing.JButton buscarpersona;
    private javax.swing.JTextField cedula_txt;
    private javax.swing.JTextField dia_txt;
    private javax.swing.JTextField edad_txt;
    private javax.swing.JButton editar2;
    private javax.swing.JButton eliminar2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField mes_txt;
    private javax.swing.JTextField nombre_txt;
    private javax.swing.JComboBox<String> tipouser;
    // End of variables declaration//GEN-END:variables
}
